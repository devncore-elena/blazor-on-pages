@page "/quiz"
@using BlazorQuiz.Shared
@inject HttpClient Http

<style>
    body {
        background-color: #333333;
        color: #cccccc;
    }

    .main {
        width:100%;
        height:100%;
        background:#000;
    }

    .main .box { 
        width:50%;
        margin:0 auto;
    } 

    h1 {
        margin-top: 20px;
        margin-bottom: 20px;
    }

    .quiz {
        margin-top: 10px;
        margin-bottom: 10px;
    }

    .quiz-title {
        font-size: 15pt;
        margin-top: 50px;
    }

    .quiz-answer {
        margin-top: 10px;
        margin-bottom: 10px;
        padding:10px;
        border: 1px solid #555555;
        border-radius: 100px;
    }

    .quiz-current {
        font-size: 15pt;
        margin-top: 20px;
        margin-bottom: 20px;
        color:#888888;
    }

    .restart {
        margin-top: 50px;
        background-color: transparent;
        color: #aaaaaa;
        padding: 10px;
    }



</style>

<div class="main">
    <h1>Quiz</h1>
    
    <div class="box">
        @if (quiz == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <div class="quiz-current">
                @current
            </div>

            @if (current < 5)
            {
                <button @onclick="Next" class="Reset">Next</button>
            }
            else
            {
                <button @onclick="Reset" class="Reset">Reset</button>
            }

            <div class="quiz">
                <div class="quiz-title">@quiz.Question</div>

                @foreach(var answer in quiz.Answers)
                {
                    <div class="quiz-answer">@answer[0], @answer[1]</div>
                }
            </div>
        }
    </div>
</div>

@code {
    private QuizModel[] quizs;
    private QuizModel quiz;
    private int current;

    protected override async Task OnInitializedAsync()
    {
        await Reset();
    }

    private async Task Reset()
    {
        current = 0;
        quizs = await Http.GetFromJsonAsync<QuizModel[]>("QuizData");
        Next();
    }

    private void Next()
    {
        quiz = quizs[current];
        current++;
    }
}
